"use strict";Component({properties:{reportSubmit:{type:Boolean,value:!1},submitText:{type:String},showSubmit:{type:Boolean,value:!0}},relations:{"../scButton/sc-button":{type:"child"},"../scCheckboxGroup/sc-checkbox-group":{type:"child"},"../scInput/sc-input":{type:"child"},"../scTextarea/sc-textarea":{type:"child"},"../scSwitch/sc-switch":{type:"child"},"../scRadioGroup/sc-radio-group":{type:"child"}},data:{rippleList:[],rippleId:0,rippleDeleteCount:0,rippleDeleteTimer:null,rippleColor:"#ffffff"},externalClasses:["sc-form-class","submit-btn-class"],ready:function(){this.formControllers=this._getAllControl()},methods:{_getAllControl:function(){return{checkboxGroups:this.getRelationNodes("../scCheckboxGroup/sc-checkbox-group"),inputs:this.getRelationNodes("../scInput/sc-input"),textareas:this.getRelationNodes("../scTextarea/sc-textarea"),switchs:this.getRelationNodes("../scSwitch/sc-switch"),radioGroups:this.getRelationNodes("../scRadioGroup/sc-radio-group")}},_formSubmit:function(t){var e=this.formControllers,i={formId:t.detail.formId};for(var s in this.formControllers)e.hasOwnProperty(s)&&e[s].length>0&&e[s].map(function(t){Object.defineProperty(i,t.data.name,{writable:!1,value:t.data.value})});this.triggerEvent("submit",{value:i},{bubbles:!0,composed:!0})},_addRipple:function(t,e){var i=this;this.properties.disabled||this._queryMultipleNodes(".submit-btn-class").then(function(s){var r=s[0],o=s[1],a=parseInt(r.width),l=parseInt(r.height),p=a>l?a:l,n=t.detail.x-(r.left+o.scrollLeft)-p/2,c=t.detail.y-(r.top+o.scrollTop)-p/2;i.data.rippleList.push({rippleId:"ripple-"+i.data.rippleId++,width:p,height:p,left:n,top:c,startAnimate:!0,holdAnimate:e||!1}),i.setData({rippleList:i.data.rippleList})})},_queryMultipleNodes:function(t){var e=this;return new Promise(function(i,s){var r=e.createSelectorQuery();r.select(t).boundingClientRect(),r.selectViewport().scrollOffset(),r.exec(function(t){i(t)})})},_scbuttonrippleAnimationend:function(){function t(){this.data.rippleList.splice(0,this.data.rippleDeleteCount),this.setData({rippleList:this.data.rippleList}),clearTimeout(this.data.timer),this.data.timer=null,this.data.rippleDeleteCount=0}this.data.rippleDeleteCount++,this.data.timer?(clearTimeout(this.data.timer),this.data.timer=setTimeout(t.bind(this),300)):this.data.timer=setTimeout(t.bind(this),300)},_longPress:function(t){this._addRipple(t,!0)},_touchend:function(t){var e=this.data.rippleList.slice(-1)[0];e&&e.holdAnimate&&(this.data.rippleList.pop(),this.setData({rippleList:this.data.rippleList}))}}});